.create table DeviceEventsRaw (Records:dynamic)

.create table DeviceEventsRaw ingestion json mapping 'DeviceEventsRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceEventsRaw policy retention softdelete = 0d

.create table DeviceEvents (TenantId:string,AccountDomain:string,AccountName:string,AccountSid:string,ActionType:string,AdditionalFields:string,AppGuardContainerId:string,DeviceId:string,DeviceName:string,FileName:string,FileOriginIP:string,FileOriginUrl:string,FolderPath:string,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountObjectId:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessCommandLine:string,InitiatingProcessFileName:string,InitiatingProcessFolderPath:string,InitiatingProcessId:string,InitiatingProcessLogonId:string,InitiatingProcessMD5:string,InitiatingProcessParentFileName:string,InitiatingProcessParentId:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,LocalIP:string,LocalPort:string,LogonId:string,MD5:string,MachineGroup:string,ProcessCommandLine:string,ProcessId:string,ProcessTokenElevation:string,RegistryKey:string,RegistryValueData:string,RegistryValueName:string,RemoteDeviceName:string,RemoteIP:string,RemotePort:string,RemoteUrl:string,ReportId:string,SHA1:string,SHA256:string,Timestamp:datetime,TimeGenerated:datetime,FileSize:string,InitiatingProcessCreationTime:datetime,InitiatingProcessFileSize:string,InitiatingProcessParentCreationTime:datetime,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,ProcessCreationTime:datetime,SourceSystem:string,Type:string)

.create-or-alter function DeviceEventsExpand() {
    DeviceEventsRaw
| mv-expand events = Records | where events.Type == 'DeviceEvents' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),AccountDomain = tostring(events.AccountDomain),AccountName = tostring(events.AccountName),AccountSid = tostring(events.AccountSid),ActionType = tostring(events.ActionType),AdditionalFields = tostring(events.AdditionalFields),AppGuardContainerId = tostring(events.AppGuardContainerId),DeviceId = tostring(events.DeviceId),DeviceName = tostring(events.DeviceName),FileName = tostring(events.FileName),FileOriginIP = tostring(events.FileOriginIP),FileOriginUrl = tostring(events.FileOriginUrl),FolderPath = tostring(events.FolderPath),InitiatingProcessAccountDomain = tostring(events.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.InitiatingProcessAccountName),InitiatingProcessAccountObjectId = tostring(events.InitiatingProcessAccountObjectId),InitiatingProcessAccountSid = tostring(events.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.InitiatingProcessAccountUpn),InitiatingProcessCommandLine = tostring(events.InitiatingProcessCommandLine),InitiatingProcessFileName = tostring(events.InitiatingProcessFileName),InitiatingProcessFolderPath = tostring(events.InitiatingProcessFolderPath),InitiatingProcessId = tostring(events.InitiatingProcessId),InitiatingProcessLogonId = tostring(events.InitiatingProcessLogonId),InitiatingProcessMD5 = tostring(events.InitiatingProcessMD5),InitiatingProcessParentFileName = tostring(events.InitiatingProcessParentFileName),InitiatingProcessParentId = tostring(events.InitiatingProcessParentId),InitiatingProcessSHA1 = tostring(events.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.InitiatingProcessSHA256),LocalIP = tostring(events.LocalIP),LocalPort = tostring(events.LocalPort),LogonId = tostring(events.LogonId),MD5 = tostring(events.MD5),MachineGroup = tostring(events.MachineGroup),ProcessCommandLine = tostring(events.ProcessCommandLine),ProcessId = tostring(events.ProcessId),ProcessTokenElevation = tostring(events.ProcessTokenElevation),RegistryKey = tostring(events.RegistryKey),RegistryValueData = tostring(events.RegistryValueData),RegistryValueName = tostring(events.RegistryValueName),RemoteDeviceName = tostring(events.RemoteDeviceName),RemoteIP = tostring(events.RemoteIP),RemotePort = tostring(events.RemotePort),RemoteUrl = tostring(events.RemoteUrl),ReportId = tostring(events.ReportId),SHA1 = tostring(events.SHA1),SHA256 = tostring(events.SHA256),Timestamp = todatetime(events.Timestamp),TimeGenerated = todatetime(events.TimeGenerated),FileSize = tostring(events.FileSize),InitiatingProcessCreationTime = todatetime(events.InitiatingProcessCreationTime),InitiatingProcessFileSize = tostring(events.InitiatingProcessFileSize),InitiatingProcessParentCreationTime = todatetime(events.InitiatingProcessParentCreationTime),InitiatingProcessVersionInfoCompanyName = tostring(events.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoFileDescription = tostring(events.InitiatingProcessVersionInfoFileDescription),InitiatingProcessVersionInfoInternalFileName = tostring(events.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoProductName = tostring(events.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.InitiatingProcessVersionInfoProductVersion),ProcessCreationTime = todatetime(events.ProcessCreationTime),SourceSystem = tostring(events.SourceSystem),Type = tostring(events.Type)
}

.alter table DeviceEvents policy update @'[{"Source": "DeviceEventsRaw", "Query": "DeviceEventsExpand()", "IsEnabled": true, "IsTransactional": true}]'
