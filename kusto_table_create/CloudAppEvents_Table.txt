.create table CloudAppEventsRaw (Records:dynamic)

.create table CloudAppEventsRaw ingestion json mapping 'CloudAppEventsRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table CloudAppEventsRaw policy retention softdelete = 0d

.create table CloudAppEvents (TenantId:string,AccountId:string,AccountType:string,AdditionalFields:string,RawEventData:string,ReportId:string,ObjectId:string,ObjectType:string,ObjectName:string,ActivityObjects:string,ActivityType:string,UserAgent:string,ISP:string,City:string,CountryCode:string,IsAnonymousProxy:string,IsExternalUser:string,IsImpersonated:string,IPAddress:string,IPCategory:string,IPTags:string,OSPlatform:string,DeviceType:string,IsAdminOperation:string,AccountDisplayName:string,AccountObjectId:string,AppInstanceId:string,ApplicationId:string,Application:string,ActionType:string,UserAgentTags:string,TimeGenerated:datetime,Timestamp:datetime,SourceSystem:string,Type:string)

.create-or-alter function CloudAppEventsExpand() {
    CloudAppEventsRaw
| mv-expand events = Records | where events.Type == 'CloudAppEvents' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),AccountId = tostring(events.AccountId),AccountType = tostring(events.AccountType),AdditionalFields = tostring(events.AdditionalFields),RawEventData = tostring(events.RawEventData),ReportId = tostring(events.ReportId),ObjectId = tostring(events.ObjectId),ObjectType = tostring(events.ObjectType),ObjectName = tostring(events.ObjectName),ActivityObjects = tostring(events.ActivityObjects),ActivityType = tostring(events.ActivityType),UserAgent = tostring(events.UserAgent),ISP = tostring(events.ISP),City = tostring(events.City),CountryCode = tostring(events.CountryCode),IsAnonymousProxy = tostring(events.IsAnonymousProxy),IsExternalUser = tostring(events.IsExternalUser),IsImpersonated = tostring(events.IsImpersonated),IPAddress = tostring(events.IPAddress),IPCategory = tostring(events.IPCategory),IPTags = tostring(events.IPTags),OSPlatform = tostring(events.OSPlatform),DeviceType = tostring(events.DeviceType),IsAdminOperation = tostring(events.IsAdminOperation),AccountDisplayName = tostring(events.AccountDisplayName),AccountObjectId = tostring(events.AccountObjectId),AppInstanceId = tostring(events.AppInstanceId),ApplicationId = tostring(events.ApplicationId),Application = tostring(events.Application),ActionType = tostring(events.ActionType),UserAgentTags = tostring(events.UserAgentTags),TimeGenerated = todatetime(events.TimeGenerated),Timestamp = todatetime(events.Timestamp),SourceSystem = tostring(events.SourceSystem),Type = tostring(events.Type)}

.alter table CloudAppEvents policy update @'[{"Source": "CloudAppEventsRaw", "Query": "CloudAppEventsExpand()", "IsEnabled": true, "IsTransactional": true}]'
