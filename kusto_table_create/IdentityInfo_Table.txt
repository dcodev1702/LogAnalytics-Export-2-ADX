.create table IdentityInfoRaw (Records:dynamic)

.create table IdentityInfoRaw ingestion json mapping 'IdentityInfoRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table IdentityInfoRaw policy retention softdelete = 0d

.create table IdentityInfo (TenantId:string,TimeGenerated:datetime,AccountName:string,AccountDomain:string,AccountUPN:string,AccountSID:string,AccountObjectId:string,AccountTenantId:string,AccountDisplayName:string,GivenName:string,Surname:string,OnPremisesAccountObjectId:string,OnPremisesExtensionAttributes:string,OnPremisesDistinguishedName:string,Tags:string,AccountCreationTime:datetime,InvestigationPriority:string,InvestigationPriorityPercentile:string,RiskLevel:string,RiskLevelDetails:string,RiskState:string,BlastRadius:string,GroupMembership:string,AssignedRoles:string,Department:string,EmployeeId:string,JobTitle:string,RelatedAccounts:string,MailAddress:string,AdditionalMailAddresses:string,Manager:string,StreetAddress:string,City:string,CompanyName:string,Country:string,State:string,Phone:string,IsAccountEnabled:string,IsServiceAccount:string,DeletedDateTime:datetime,LastSeenDate:datetime,UACFlags:string,UserState:string,UserStateChangedOn:datetime,UserType:string,ExtensionProperty:string,AccountCloudSID:string,IsMFARegistered:string,Applications:string,ServicePrincipals:string,SourceSystem:string,UserAccountControl:string,ChangeSource:string,EntityRiskScore:string,Type:string)

.create-or-alter function IdentityInfoExpand() {
    IdentityInfoRaw
| mv-expand events = Records | where events.Type == 'IdentityInfo' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),TimeGenerated = todatetime(events.TimeGenerated),AccountName = tostring(events.AccountName),AccountDomain = tostring(events.AccountDomain),AccountUPN = tostring(events.AccountUPN),AccountSID = tostring(events.AccountSID),AccountObjectId = tostring(events.AccountObjectId),AccountTenantId = tostring(events.AccountTenantId),AccountDisplayName = tostring(events.AccountDisplayName),GivenName = tostring(events.GivenName),Surname = tostring(events.Surname),OnPremisesAccountObjectId = tostring(events.OnPremisesAccountObjectId),OnPremisesExtensionAttributes = tostring(events.OnPremisesExtensionAttributes),OnPremisesDistinguishedName = tostring(events.OnPremisesDistinguishedName),Tags = tostring(events.Tags),AccountCreationTime = todatetime(events.AccountCreationTime),InvestigationPriority = tostring(events.InvestigationPriority),InvestigationPriorityPercentile = tostring(events.InvestigationPriorityPercentile),RiskLevel = tostring(events.RiskLevel),RiskLevelDetails = tostring(events.RiskLevelDetails),RiskState = tostring(events.RiskState),BlastRadius = tostring(events.BlastRadius),GroupMembership = tostring(events.GroupMembership),AssignedRoles = tostring(events.AssignedRoles),Department = tostring(events.Department),EmployeeId = tostring(events.EmployeeId),JobTitle = tostring(events.JobTitle),RelatedAccounts = tostring(events.RelatedAccounts),MailAddress = tostring(events.MailAddress),AdditionalMailAddresses = tostring(events.AdditionalMailAddresses),Manager = tostring(events.Manager),StreetAddress = tostring(events.StreetAddress),City = tostring(events.City),CompanyName = tostring(events.CompanyName),Country = tostring(events.Country),State = tostring(events.State),Phone = tostring(events.Phone),IsAccountEnabled = tostring(events.IsAccountEnabled),IsServiceAccount = tostring(events.IsServiceAccount),DeletedDateTime = todatetime(events.DeletedDateTime),LastSeenDate = todatetime(events.LastSeenDate),UACFlags = tostring(events.UACFlags),UserState = tostring(events.UserState),UserStateChangedOn = todatetime(events.UserStateChangedOn),UserType = tostring(events.UserType),ExtensionProperty = tostring(events.ExtensionProperty),AccountCloudSID = tostring(events.AccountCloudSID),IsMFARegistered = tostring(events.IsMFARegistered),Applications = tostring(events.Applications),ServicePrincipals = tostring(events.ServicePrincipals),SourceSystem = tostring(events.SourceSystem),UserAccountControl = tostring(events.UserAccountControl),ChangeSource = tostring(events.ChangeSource),EntityRiskScore = tostring(events.EntityRiskScore),Type = tostring(events.Type)}

.alter table IdentityInfo policy update @'[{"Source": "IdentityInfoRaw", "Query": "IdentityInfoExpand()", "IsEnabled": true, "IsTransactional": true}]'
