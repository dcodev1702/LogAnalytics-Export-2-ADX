.create table SecurityIncidentRaw (Records:dynamic)

.create table SecurityIncidentRaw ingestion json mapping 'SecurityIncidentRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table SecurityIncidentRaw policy retention softdelete = 0d

.create table SecurityIncident (TenantId:string,TimeGenerated:datetime,IncidentName:string,Title:string,Description:string,Severity:string,Status:string,Classification:string,ClassificationComment:string,ClassificationReason:string,Owner:string,ProviderName:string,ProviderIncidentId:string,FirstActivityTime:datetime,LastActivityTime:datetime,FirstModifiedTime:datetime,LastModifiedTime:datetime,CreatedTime:datetime,ClosedTime:datetime,IncidentNumber:string,RelatedAnalyticRuleIds:string,AlertIds:string,BookmarkIds:string,Comments:string,Tasks:string,Labels:string,IncidentUrl:string,AdditionalData:string,ModifiedBy:string,SourceSystem:string,Type:string)

.create-or-alter function SecurityIncidentExpand() {
    SecurityIncidentRaw
| mv-expand events = Records | where events.Type == 'SecurityIncident' and isnotempty(events.TimeGenerated)
| project 
TenantId = tostring(events.TenantId),TimeGenerated = todatetime(events.TimeGenerated),IncidentName = tostring(events.IncidentName),Title = tostring(events.Title),Description = tostring(events.Description),Severity = tostring(events.Severity),Status = tostring(events.Status),Classification = tostring(events.Classification),ClassificationComment = tostring(events.ClassificationComment),ClassificationReason = tostring(events.ClassificationReason),Owner = tostring(events.Owner),ProviderName = tostring(events.ProviderName),ProviderIncidentId = tostring(events.ProviderIncidentId),FirstActivityTime = todatetime(events.FirstActivityTime),LastActivityTime = todatetime(events.LastActivityTime),FirstModifiedTime = todatetime(events.FirstModifiedTime),LastModifiedTime = todatetime(events.LastModifiedTime),CreatedTime = todatetime(events.CreatedTime),ClosedTime = todatetime(events.ClosedTime),IncidentNumber = tostring(events.IncidentNumber),RelatedAnalyticRuleIds = tostring(events.RelatedAnalyticRuleIds),AlertIds = tostring(events.AlertIds),BookmarkIds = tostring(events.BookmarkIds),Comments = tostring(events.Comments),Tasks = tostring(events.Tasks),Labels = tostring(events.Labels),IncidentUrl = tostring(events.IncidentUrl),AdditionalData = tostring(events.AdditionalData),ModifiedBy = tostring(events.ModifiedBy),SourceSystem = tostring(events.SourceSystem),Type = tostring(events.Type)
}

.alter table SecurityIncident policy update @'[{"Source": "SecurityIncidentRaw", "Query": "SecurityIncidentExpand()", "IsEnabled": true, "IsTransactional": true}]'
