.create table SecurityDetectionRaw (Records:dynamic)

.create table SecurityDetectionRaw ingestion json mapping 'SecurityDetectionRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table SecurityDetectionRaw policy retention softdelete = 0d

.create table SecurityDetection (TenantId:string,SourceSystem:string,TimeGenerated:datetime,Computer:string,Provider:string,AlertTitle:string,AlertType:string,AlertSeverity:string,Description:string,OriginalSeverity:string,DetectionID:string,SubjectUserName:string,RemediationSteps:string,SubjectDomainName:string,ProcessName:string,CommandLine:string,LogChannel:string,Duration:string,InvalidAccountsSeen:string,ValidAccountsSeen:string,SuccessfulLogins:string,FailedAttempts:string,AccountsSeen:string,SuspiciousProcess:string,FullPath:string,ChildProcess:string,ParentProcess:string,ExtendedProperties:string,SubscriptionId:string,ServiceId:string,IsFirstParty:string,ReportingSystem:string,OccuringDatacenter:string,AssociatedResource:string,Type:string,_ResourceId:string)

.create-or-alter function SecurityDetectionExpand() {
    SecurityDetectionRaw
| mv-expand events = Records | where events.Type == 'SecurityDetection' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),SourceSystem = tostring(events.SourceSystem),TimeGenerated = todatetime(events.TimeGenerated),Computer = tostring(events.Computer),Provider = tostring(events.Provider),AlertTitle = tostring(events.AlertTitle),AlertType = tostring(events.AlertType),AlertSeverity = tostring(events.AlertSeverity),Description = tostring(events.Description),OriginalSeverity = tostring(events.OriginalSeverity),DetectionID = tostring(events.DetectionID),SubjectUserName = tostring(events.SubjectUserName),RemediationSteps = tostring(events.RemediationSteps),SubjectDomainName = tostring(events.SubjectDomainName),ProcessName = tostring(events.ProcessName),CommandLine = tostring(events.CommandLine),LogChannel = tostring(events.LogChannel),Duration = tostring(events.Duration),InvalidAccountsSeen = tostring(events.InvalidAccountsSeen),ValidAccountsSeen = tostring(events.ValidAccountsSeen),SuccessfulLogins = tostring(events.SuccessfulLogins),FailedAttempts = tostring(events.FailedAttempts),AccountsSeen = tostring(events.AccountsSeen),SuspiciousProcess = tostring(events.SuspiciousProcess),FullPath = tostring(events.FullPath),ChildProcess = tostring(events.ChildProcess),ParentProcess = tostring(events.ParentProcess),ExtendedProperties = tostring(events.ExtendedProperties),SubscriptionId = tostring(events.SubscriptionId),ServiceId = tostring(events.ServiceId),IsFirstParty = tostring(events.IsFirstParty),ReportingSystem = tostring(events.ReportingSystem),OccuringDatacenter = tostring(events.OccuringDatacenter),AssociatedResource = tostring(events.AssociatedResource),Type = tostring(events.Type),_ResourceId = tostring(events._ResourceId)
}

.alter table SecurityDetection policy update @'[{"Source": "SecurityDetectionRaw", "Query": "SecurityDetectionExpand()", "IsEnabled": true, "IsTransactional": true}]'
