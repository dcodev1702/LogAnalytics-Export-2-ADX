//Run these commands ONE AT A TIME in order to create the Event and EventRaw tables, policies, and required maapping.

.create table Event (TenantId:string,SourceSystem:string,TimeGenerated:datetime,Source:string,EventLog:string,Computer:string,EventLevel:string,EventLevelName:string,ParameterXml:string,EventData:string,EventID:string,RenderedDescription:string,AzureDeploymentID:string,Role:string,EventCategory:string,UserName:string,Message:string,MG:string,ManagementGroupName:string,Type:string,_ResourceId:string)

.create table EventRaw (Records:dynamic)

.alter-merge table EventRaw policy retention softdelete = 0d

.create table EventRaw ingestion json mapping 'EventRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.create-or-alter function EventExpand() {EventRaw | mv-expand events = Records | project TenantId = tostring(events.TenantId),SourceSystem = tostring(events.SourceSystem),TimeGenerated = todatetime(events.TimeGenerated),Source = tostring(events.Source),EventLog = tostring(events.EventLog),Computer = tostring(events.Computer),EventLevel = tostring(events.EventLevel),EventLevelName = tostring(events.EventLevelName),ParameterXml = tostring(events.ParameterXml),EventData = tostring(events.EventData),EventID = tostring(events.EventID),RenderedDescription = tostring(events.RenderedDescription),AzureDeploymentID = tostring(events.AzureDeploymentID),Role = tostring(events.Role),EventCategory = tostring(events.EventCategory),UserName = tostring(events.UserName),Message = tostring(events.Message),MG = tostring(events.MG),ManagementGroupName = tostring(events.ManagementGroupName),Type = tostring(events.Type),_ResourceId = tostring(events._ResourceId) }

.alter table Event policy update @'[{"Source": "EventRaw", "Query": "EventExpand()", "IsEnabled": true, "IsTransactional": true}]'
