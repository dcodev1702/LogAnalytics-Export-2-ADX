.create table OfficeActivityRaw (Records:dynamic)

.create table OfficeActivityRaw ingestion json mapping 'OfficeActivityRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table OfficeActivityRaw policy retention softdelete = 0d

.create table OfficeActivity (TenantId:string,Application:string,UserDomain:string,Activity:string,UserAgent:string,RecordType:string,TimeGenerated:datetime,Operation:string,OrganizationId:string,OrganizationId_:string,UserType:string,UserKey:string,OfficeWorkload:string,ResultStatus:string,ResultReasonType:string,OfficeObjectId:string,UserId:string,UserId_:string,ClientIP:string,ClientIP_:string,Scope:string,Site_:string,ItemType:string,EventSource:string,Source_Name:string,MachineDomainInfo:string,MachineId:string,Site_Url:string,Site_Url_:string,SourceRelativeUrl:string,SourceRelativeUrl_:string,SourceFileName:string,SourceFileName_:string,SourceFileExtension:string,DestinationRelativeUrl:string,DestinationFileName:string,DestinationFileExtension:string,UserSharedWith:string,SharingType:string,CustomEvent:string,Event_Data:string,ModifiedObjectResolvedName:string,Parameters:string,ExternalAccess:string,OriginatingServer:string,OrganizationName:string,Logon_Type:string,InternalLogonType:string,MailboxGuid:string,MailboxOwnerUPN:string,MailboxOwnerSid:string,MailboxOwnerMasterAccountSid:string,LogonUserSid:string,LogonUserDisplayName:string,ClientInfoString:string,Client_IPAddress:string,ClientMachineName:string,ClientProcessName:string,ClientVersion:string,Folder:string,CrossMailboxOperations:string,DestMailboxId:string,DestMailboxOwnerUPN:string,DestMailboxOwnerSid:string,DestMailboxOwnerMasterAccountSid:string,DestFolder:string,Folders:string,AffectedItems:string,Item:string,ModifiedProperties:string,SendAsUserSmtp:string,SendAsUserMailboxGuid:string,SendOnBehalfOfUserSmtp:string,SendonBehalfOfUserMailboxGuid:string,ExtendedProperties:string,Client:string,LoginStatus:string,Actor:string,ActorContextId:string,ActorIpAddress:string,InterSystemsId:string,IntraSystemId:string,SupportTicketId:string,TargetContextId:string,DataCenterSecurityEventType:string,EffectiveOrganization:string,ElevationTime:datetime,ElevationApprover:string,ElevationApprovedTime:datetime,ElevationRequestId:string,ElevationRole:string,ElevationDuration:string,GenericInfo:string,SourceSystem:string,OfficeId:string,SourceRecordId:string,AzureActiveDirectory_EventType:string,AADTarget:string,Start_Time:datetime,OfficeTenantId:string,OfficeTenantId_:string,TargetUserOrGroupName:string,TargetUserOrGroupType:string,MessageId:string,Members:string,TeamName:string,TeamGuid:string,ChannelType:string,ChannelName:string,ChannelGuid:string,ExtraProperties:string,AddOnType:string,AddonName:string,TabType:string,Name:string,OldValue:string,NewValue:string,ItemName:string,ChatThreadId:string,ChatName:string,CommunicationType:string,AADGroupId:string,AddOnGuid:string,AppDistributionMode:string,TargetUserId:string,OperationScope:string,AzureADAppId:string,OperationProperties:string,AppId:string,ClientAppId:string,ApplicationId:string,SRPolicyId:string,SRPolicyName:string,SRRuleMatchDetails:string,IsManagedDevice:string,ActorContextId_:string,Type:string,_ResourceId:string)

.create-or-alter function OfficeActivityExpand() {
    OfficeActivityRaw
| mv-expand events = Records | where events.Type == 'OfficeActivity' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),Application = tostring(events.Application),UserDomain = tostring(events.UserDomain),Activity = tostring(events.Activity),UserAgent = tostring(events.UserAgent),RecordType = tostring(events.RecordType),TimeGenerated = todatetime(events.TimeGenerated),Operation = tostring(events.Operation),OrganizationId = tostring(events.OrganizationId),OrganizationId_ = tostring(events.OrganizationId_),UserType = tostring(events.UserType),UserKey = tostring(events.UserKey),OfficeWorkload = tostring(events.OfficeWorkload),ResultStatus = tostring(events.ResultStatus),ResultReasonType = tostring(events.ResultReasonType),OfficeObjectId = tostring(events.OfficeObjectId),UserId = tostring(events.UserId),UserId_ = tostring(events.UserId_),ClientIP = tostring(events.ClientIP),ClientIP_ = tostring(events.ClientIP_),Scope = tostring(events.Scope),Site_ = tostring(events.Site_),ItemType = tostring(events.ItemType),EventSource = tostring(events.EventSource),Source_Name = tostring(events.Source_Name),MachineDomainInfo = tostring(events.MachineDomainInfo),MachineId = tostring(events.MachineId),Site_Url = tostring(events.Site_Url),Site_Url_ = tostring(events.Site_Url_),SourceRelativeUrl = tostring(events.SourceRelativeUrl),SourceRelativeUrl_ = tostring(events.SourceRelativeUrl_),SourceFileName = tostring(events.SourceFileName),SourceFileName_ = tostring(events.SourceFileName_),SourceFileExtension = tostring(events.SourceFileExtension),DestinationRelativeUrl = tostring(events.DestinationRelativeUrl),DestinationFileName = tostring(events.DestinationFileName),DestinationFileExtension = tostring(events.DestinationFileExtension),UserSharedWith = tostring(events.UserSharedWith),SharingType = tostring(events.SharingType),CustomEvent = tostring(events.CustomEvent),Event_Data = tostring(events.Event_Data),ModifiedObjectResolvedName = tostring(events.ModifiedObjectResolvedName),Parameters = tostring(events.Parameters),ExternalAccess = tostring(events.ExternalAccess),OriginatingServer = tostring(events.OriginatingServer),OrganizationName = tostring(events.OrganizationName),Logon_Type = tostring(events.Logon_Type),InternalLogonType = tostring(events.InternalLogonType),MailboxGuid = tostring(events.MailboxGuid),MailboxOwnerUPN = tostring(events.MailboxOwnerUPN),MailboxOwnerSid = tostring(events.MailboxOwnerSid),MailboxOwnerMasterAccountSid = tostring(events.MailboxOwnerMasterAccountSid),LogonUserSid = tostring(events.LogonUserSid),LogonUserDisplayName = tostring(events.LogonUserDisplayName),ClientInfoString = tostring(events.ClientInfoString),Client_IPAddress = tostring(events.Client_IPAddress),ClientMachineName = tostring(events.ClientMachineName),ClientProcessName = tostring(events.ClientProcessName),ClientVersion = tostring(events.ClientVersion),Folder = tostring(events.Folder),CrossMailboxOperations = tostring(events.CrossMailboxOperations),DestMailboxId = tostring(events.DestMailboxId),DestMailboxOwnerUPN = tostring(events.DestMailboxOwnerUPN),DestMailboxOwnerSid = tostring(events.DestMailboxOwnerSid),DestMailboxOwnerMasterAccountSid = tostring(events.DestMailboxOwnerMasterAccountSid),DestFolder = tostring(events.DestFolder),Folders = tostring(events.Folders),AffectedItems = tostring(events.AffectedItems),Item = tostring(events.Item),ModifiedProperties = tostring(events.ModifiedProperties),SendAsUserSmtp = tostring(events.SendAsUserSmtp),SendAsUserMailboxGuid = tostring(events.SendAsUserMailboxGuid),SendOnBehalfOfUserSmtp = tostring(events.SendOnBehalfOfUserSmtp),SendonBehalfOfUserMailboxGuid = tostring(events.SendonBehalfOfUserMailboxGuid),ExtendedProperties = tostring(events.ExtendedProperties),Client = tostring(events.Client),LoginStatus = tostring(events.LoginStatus),Actor = tostring(events.Actor),ActorContextId = tostring(events.ActorContextId),ActorIpAddress = tostring(events.ActorIpAddress),InterSystemsId = tostring(events.InterSystemsId),IntraSystemId = tostring(events.IntraSystemId),SupportTicketId = tostring(events.SupportTicketId),TargetContextId = tostring(events.TargetContextId),DataCenterSecurityEventType = tostring(events.DataCenterSecurityEventType),EffectiveOrganization = tostring(events.EffectiveOrganization),ElevationTime = todatetime(events.ElevationTime),ElevationApprover = tostring(events.ElevationApprover),ElevationApprovedTime = todatetime(events.ElevationApprovedTime),ElevationRequestId = tostring(events.ElevationRequestId),ElevationRole = tostring(events.ElevationRole),ElevationDuration = tostring(events.ElevationDuration),GenericInfo = tostring(events.GenericInfo),SourceSystem = tostring(events.SourceSystem),OfficeId = tostring(events.OfficeId),SourceRecordId = tostring(events.SourceRecordId),AzureActiveDirectory_EventType = tostring(events.AzureActiveDirectory_EventType),AADTarget = tostring(events.AADTarget),Start_Time = todatetime(events.Start_Time),OfficeTenantId = tostring(events.OfficeTenantId),OfficeTenantId_ = tostring(events.OfficeTenantId_),TargetUserOrGroupName = tostring(events.TargetUserOrGroupName),TargetUserOrGroupType = tostring(events.TargetUserOrGroupType),MessageId = tostring(events.MessageId),Members = tostring(events.Members),TeamName = tostring(events.TeamName),TeamGuid = tostring(events.TeamGuid),ChannelType = tostring(events.ChannelType),ChannelName = tostring(events.ChannelName),ChannelGuid = tostring(events.ChannelGuid),ExtraProperties = tostring(events.ExtraProperties),AddOnType = tostring(events.AddOnType),AddonName = tostring(events.AddonName),TabType = tostring(events.TabType),Name = tostring(events.Name),OldValue = tostring(events.OldValue),NewValue = tostring(events.NewValue),ItemName = tostring(events.ItemName),ChatThreadId = tostring(events.ChatThreadId),ChatName = tostring(events.ChatName),CommunicationType = tostring(events.CommunicationType),AADGroupId = tostring(events.AADGroupId),AddOnGuid = tostring(events.AddOnGuid),AppDistributionMode = tostring(events.AppDistributionMode),TargetUserId = tostring(events.TargetUserId),OperationScope = tostring(events.OperationScope),AzureADAppId = tostring(events.AzureADAppId),OperationProperties = tostring(events.OperationProperties),AppId = tostring(events.AppId),ClientAppId = tostring(events.ClientAppId),ApplicationId = tostring(events.ApplicationId),SRPolicyId = tostring(events.SRPolicyId),SRPolicyName = tostring(events.SRPolicyName),SRRuleMatchDetails = tostring(events.SRRuleMatchDetails),IsManagedDevice = tostring(events.IsManagedDevice),ActorContextId_ = tostring(events.ActorContextId_),Type = tostring(events.Type),_ResourceId = tostring(events._ResourceId)
}

.alter table OfficeActivity policy update @'[{"Source": "OfficeActivityRaw", "Query": "OfficeActivityExpand()", "IsEnabled": true, "IsTransactional": true}]'
