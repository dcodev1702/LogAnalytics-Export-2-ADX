.create table ThreatIntelligenceIndicatorRaw (Records:dynamic)

.create table ThreatIntelligenceIndicatorRaw ingestion json mapping 'ThreatIntelligenceIndicatorRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table ThreatIntelligenceIndicatorRaw policy retention softdelete = 0d

.create table ThreatIntelligenceIndicator (TenantId:string,TimeGenerated:datetime,SourceSystem:string,Action:string,ActivityGroupNames:string,AdditionalInformation:string,ApplicationId:string,AzureTenantId:string,ConfidenceScore:real,Description:string,DiamondModel:string,ExternalIndicatorId:string,ExpirationDateTime:datetime,IndicatorId:string,ThreatType:string,Active:bool,KillChainActions:bool,KillChainC2:bool,KillChainDelivery:bool,KillChainExploitation:bool,KillChainReconnaissance:bool,KillChainWeaponization:bool,KnownFalsePositives:string,MalwareNames:string,PassiveOnly:bool,ThreatSeverity:int,Tags:string,TrafficLightProtocolLevel:string,EmailEncoding:string,EmailLanguage:string,EmailRecipient:string,EmailSenderAddress:string,EmailSenderName:string,EmailSourceDomain:string,EmailSourceIpAddress:string,EmailSubject:string,EmailXMailer:string,FileCompileDateTime:datetime,FileCreatedDateTime:datetime,FileHashType:string,FileHashValue:string,FileMutexName:string,FileName:string,FilePacker:string,FilePath:string,FileSize:int,FileType:string,DomainName:string,NetworkIP:string,NetworkPort:int,NetworkDestinationAsn:int,NetworkDestinationCidrBlock:string,NetworkDestinationIP:string,NetworkCidrBlock:string,NetworkDestinationPort:int,NetworkProtocol:int,NetworkSourceAsn:int,NetworkSourceCidrBlock:string,NetworkSourceIP:string,NetworkSourcePort:int,Url:string,UserAgent:string,IndicatorProvider:string,Type:string)

.create-or-alter function ThreatIntelligenceIndicatorExpand() {
    ThreatIntelligenceIndicatorRaw
| mv-expand events = Records | where events.Type == 'ThreatIntelligenceIndicator' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),TimeGenerated = todatetime(events.TimeGenerated),SourceSystem = tostring(events.SourceSystem),Action = tostring(events.Action),ActivityGroupNames = tostring(events.ActivityGroupNames),AdditionalInformation = tostring(events.AdditionalInformation),ApplicationId = tostring(events.ApplicationId),AzureTenantId = tostring(events.AzureTenantId),ConfidenceScore = toreal(events.ConfidenceScore),Description = tostring(events.Description),DiamondModel = tostring(events.DiamondModel),ExternalIndicatorId = tostring(events.ExternalIndicatorId),ExpirationDateTime = todatetime(events.ExpirationDateTime),IndicatorId = tostring(events.IndicatorId),ThreatType = tostring(events.ThreatType),Active = tobool(events.Active),KillChainActions = tobool(events.KillChainActions),KillChainC2 = tobool(events.KillChainC2),KillChainDelivery = tobool(events.KillChainDelivery),KillChainExploitation = tobool(events.KillChainExploitation),KillChainReconnaissance = tobool(events.KillChainReconnaissance),KillChainWeaponization = tobool(events.KillChainWeaponization),KnownFalsePositives = tostring(events.KnownFalsePositives),MalwareNames = tostring(events.MalwareNames),PassiveOnly = tobool(events.PassiveOnly),ThreatSeverity = toint(events.ThreatSeverity),Tags = tostring(events.Tags),TrafficLightProtocolLevel = tostring(events.TrafficLightProtocolLevel),EmailEncoding = tostring(events.EmailEncoding),EmailLanguage = tostring(events.EmailLanguage),EmailRecipient = tostring(events.EmailRecipient),EmailSenderAddress = tostring(events.EmailSenderAddress),EmailSenderName = tostring(events.EmailSenderName),EmailSourceDomain = tostring(events.EmailSourceDomain),EmailSourceIpAddress = tostring(events.EmailSourceIpAddress),EmailSubject = tostring(events.EmailSubject),EmailXMailer = tostring(events.EmailXMailer),FileCompileDateTime = todatetime(events.FileCompileDateTime),FileCreatedDateTime = todatetime(events.FileCreatedDateTime),FileHashType = tostring(events.FileHashType),FileHashValue = tostring(events.FileHashValue),FileMutexName = tostring(events.FileMutexName),FileName = tostring(events.FileName),FilePacker = tostring(events.FilePacker),FilePath = tostring(events.FilePath),FileSize = toint(events.FileSize),FileType = tostring(events.FileType),DomainName = tostring(events.DomainName),NetworkIP = tostring(events.NetworkIP),NetworkPort = toint(events.NetworkPort),NetworkDestinationAsn = toint(events.NetworkDestinationAsn),NetworkDestinationCidrBlock = tostring(events.NetworkDestinationCidrBlock),NetworkDestinationIP = tostring(events.NetworkDestinationIP),NetworkCidrBlock = tostring(events.NetworkCidrBlock),NetworkDestinationPort = toint(events.NetworkDestinationPort),NetworkProtocol = toint(events.NetworkProtocol),NetworkSourceAsn = toint(events.NetworkSourceAsn),NetworkSourceCidrBlock = tostring(events.NetworkSourceCidrBlock),NetworkSourceIP = tostring(events.NetworkSourceIP),NetworkSourcePort = toint(events.NetworkSourcePort),Url = tostring(events.Url),UserAgent = tostring(events.UserAgent),IndicatorProvider = tostring(events.IndicatorProvider),Type = tostring(events.Type)
}

.alter table ThreatIntelligenceIndicator policy update @'[{"Source": "ThreatIntelligenceIndicatorRaw", "Query": "ThreatIntelligenceIndicatorExpand()", "IsEnabled": true, "IsTransactional": true}]'
