.create table VMConnectionRaw (Records:dynamic)

.create table VMConnectionRaw ingestion json mapping 'VMConnectionRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table VMConnectionRaw policy retention softdelete = 0d

.create table VMConnection (TimeGenerated:datetime,Computer:string,Direction:string,ProcessName:string,SourceIp:string,DestinationIp:string,DestinationPort:string,Protocol:string,RemoteIp:string,RemoteDnsQuestions:string,RemoteDnsCanonicalNames:string,RemoteClassification:string,RemoteLongitude:string,RemoteLatitude:string,RemoteCountry:string,BytesSent:string,BytesReceived:string,LinksLive:string,LinksTerminated:string,LinksEstablished:string,LinksFailed:string,Responses:string,ResponseTimeSum:string,ResponseTimeMin:string,ResponseTimeMax:string,MaliciousIp:string,IndicatorThreatType:string,Description:string,TLPLevel:string,Confidence:string,Severity:string,FirstReportedDateTime:string,LastReportedDateTime:string,IsActive:string,ReportReferenceLink:string,AdditionalInformation:string,ConnectionId:string,Machine:string,Process:string,AgentId:string,TenantId:string,SourceSystem:string,Type:string,_ResourceId:string)

.create-or-alter function VMConnectionExpand() {
    VMConnectionRaw
| mv-expand events = Records | where events.Type == 'VMConnection' and isnotempty(events.TimeGenerated)
| project TimeGenerated = todatetime(events.TimeGenerated),Computer = tostring(events.Computer),Direction = tostring(events.Direction),ProcessName = tostring(events.ProcessName),SourceIp = tostring(events.SourceIp),DestinationIp = tostring(events.DestinationIp),DestinationPort = tostring(events.DestinationPort),Protocol = tostring(events.Protocol),RemoteIp = tostring(events.RemoteIp),RemoteDnsQuestions = tostring(events.RemoteDnsQuestions),RemoteDnsCanonicalNames = tostring(events.RemoteDnsCanonicalNames),RemoteClassification = tostring(events.RemoteClassification),RemoteLongitude = tostring(events.RemoteLongitude),RemoteLatitude = tostring(events.RemoteLatitude),RemoteCountry = tostring(events.RemoteCountry),BytesSent = tostring(events.BytesSent),BytesReceived = tostring(events.BytesReceived),LinksLive = tostring(events.LinksLive),LinksTerminated = tostring(events.LinksTerminated),LinksEstablished = tostring(events.LinksEstablished),LinksFailed = tostring(events.LinksFailed),Responses = tostring(events.Responses),ResponseTimeSum = tostring(events.ResponseTimeSum),ResponseTimeMin = tostring(events.ResponseTimeMin),ResponseTimeMax = tostring(events.ResponseTimeMax),MaliciousIp = tostring(events.MaliciousIp),IndicatorThreatType = tostring(events.IndicatorThreatType),Description = tostring(events.Description),TLPLevel = tostring(events.TLPLevel),Confidence = tostring(events.Confidence),Severity = tostring(events.Severity),FirstReportedDateTime = tostring(events.FirstReportedDateTime),LastReportedDateTime = tostring(events.LastReportedDateTime),IsActive = tostring(events.IsActive),ReportReferenceLink = tostring(events.ReportReferenceLink),AdditionalInformation = tostring(events.AdditionalInformation),ConnectionId = tostring(events.ConnectionId),Machine = tostring(events.Machine),Process = tostring(events.Process),AgentId = tostring(events.AgentId),TenantId = tostring(events.TenantId),SourceSystem = tostring(events.SourceSystem),Type = tostring(events.Type),_ResourceId = tostring(events._ResourceId)
}

.alter table VMConnection policy update @'[{"Source": "VMConnectionRaw", "Query": "VMConnectionExpand()", "IsEnabled": true, "IsTransactional": true}]'
