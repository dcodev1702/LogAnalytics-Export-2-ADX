.create table UpdateRaw (Records:dynamic)

.create table UpdateRaw ingestion json mapping 'UpdateRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table UpdateRaw policy retention softdelete = 0d

.create table Update (TenantId:string,SourceSystem:string,TimeGenerated:datetime,MG:string,ManagementGroupName:string,SourceComputerId:string,Title:string,MSRCSeverity:string,Classification:string,PublishedDate:datetime,Computer:string,UpdateState:string,Product:string,KBID:string,UpdateID:string,RevisionNumber:string,Optional:string,RebootBehavior:string,MSRCBulletinID:string,Approved:string,ApprovalSource:string,InstallTimePredictionSeconds:string,InstallTimeDeviationRangeSeconds:string,InstallTimeAvailable:string,SubscriptionId:string,ResourceGroup:string,ResourceProvider:string,Resource:string,ResourceId:string,ResourceType:string,ComputerEnvironment:string,VMUUID:string,OSType:string,ProductVersion:string,ProductArch:string,CVENumbers:string,BulletinUrl:string,BulletinID:string,PackageRepository:string,PackageSeverity:string,OSName:string,OSVersion:string,OSFullName:string,Type:string,_ResourceId:string)

.create-or-alter function UpdateExpand() {
    UpdateRaw
| mv-expand events = Records | where events.Type == 'Update' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),SourceSystem = tostring(events.SourceSystem),TimeGenerated = todatetime(events.TimeGenerated),MG = tostring(events.MG),ManagementGroupName = tostring(events.ManagementGroupName),SourceComputerId = tostring(events.SourceComputerId),Title = tostring(events.Title),MSRCSeverity = tostring(events.MSRCSeverity),Classification = tostring(events.Classification),PublishedDate = todatetime(events.PublishedDate),Computer = tostring(events.Computer),UpdateState = tostring(events.UpdateState),Product = tostring(events.Product),KBID = tostring(events.KBID),UpdateID = tostring(events.UpdateID),RevisionNumber = tostring(events.RevisionNumber),Optional = tostring(events.Optional),RebootBehavior = tostring(events.RebootBehavior),MSRCBulletinID = tostring(events.MSRCBulletinID),Approved = tostring(events.Approved),ApprovalSource = tostring(events.ApprovalSource),InstallTimePredictionSeconds = tostring(events.InstallTimePredictionSeconds),InstallTimeDeviationRangeSeconds = tostring(events.InstallTimeDeviationRangeSeconds),InstallTimeAvailable = tostring(events.InstallTimeAvailable),SubscriptionId = tostring(events.SubscriptionId),ResourceGroup = tostring(events.ResourceGroup),ResourceProvider = tostring(events.ResourceProvider),Resource = tostring(events.Resource),ResourceId = tostring(events.ResourceId),ResourceType = tostring(events.ResourceType),ComputerEnvironment = tostring(events.ComputerEnvironment),VMUUID = tostring(events.VMUUID),OSType = tostring(events.OSType),ProductVersion = tostring(events.ProductVersion),ProductArch = tostring(events.ProductArch),CVENumbers = tostring(events.CVENumbers),BulletinUrl = tostring(events.BulletinUrl),BulletinID = tostring(events.BulletinID),PackageRepository = tostring(events.PackageRepository),PackageSeverity = tostring(events.PackageSeverity),OSName = tostring(events.OSName),OSVersion = tostring(events.OSVersion),OSFullName = tostring(events.OSFullName),Type = tostring(events.Type),_ResourceId = tostring(events._ResourceId)
}

.alter table Update policy update @'[{"Source": "UpdateRaw", "Query": "UpdateExpand()", "IsEnabled": true, "IsTransactional": true}]'
