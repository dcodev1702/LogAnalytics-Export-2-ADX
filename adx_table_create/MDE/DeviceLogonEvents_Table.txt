.create table DeviceLogonEventsRaw (Records:dynamic)

.create table DeviceLogonEventsRaw ingestion json mapping 'DeviceLogonEventsRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceLogonEventsRaw policy retention softdelete = 0d

.create table DeviceLogonEvents (TenantId:string,AccountDomain:string,AccountName:string,AccountSid:string,ActionType:string,AdditionalFields:dynamic,AppGuardContainerId:string,DeviceId:string,DeviceName:string,FailureReason:string,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountObjectId:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessCommandLine:string,InitiatingProcessFileName:string,InitiatingProcessFolderPath:string,InitiatingProcessId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessMD5:string,InitiatingProcessParentFileName:string,InitiatingProcessParentId:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessTokenElevation:string,IsLocalAdmin:bool,LogonId:string,LogonType:string,MachineGroup:string,Protocol:string,RemoteDeviceName:string,RemoteIP:string,RemoteIPType:string,RemotePort:int,ReportId:string,Timestamp:datetime,TimeGenerated:datetime,InitiatingProcessParentCreationTime:datetime,InitiatingProcessCreationTime:datetime,InitiatingProcessFileSize:string,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoFileDescription:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessSessionId:string,IsInitiatingProcessRemoteSession:bool,InitiatingProcessRemoteSessionDeviceName:string,InitiatingProcessRemoteSessionIP:string,SourceSystem:string,Type:string)

.create-or-alter function DeviceLogonEventsExpand() {
    DeviceLogonEventsRaw
| mv-expand events = Records | where events.Type == 'DeviceLogonEvents' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),AccountDomain = tostring(events.AccountDomain),AccountName = tostring(events.AccountName),AccountSid = tostring(events.AccountSid),ActionType = tostring(events.ActionType),AdditionalFields = todynamic(events.AdditionalFields),AppGuardContainerId = tostring(events.AppGuardContainerId),DeviceId = tostring(events.DeviceId),DeviceName = tostring(events.DeviceName),FailureReason = tostring(events.FailureReason),InitiatingProcessAccountDomain = tostring(events.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.InitiatingProcessAccountName),InitiatingProcessAccountObjectId = tostring(events.InitiatingProcessAccountObjectId),InitiatingProcessAccountSid = tostring(events.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.InitiatingProcessAccountUpn),InitiatingProcessCommandLine = tostring(events.InitiatingProcessCommandLine),InitiatingProcessFileName = tostring(events.InitiatingProcessFileName),InitiatingProcessFolderPath = tostring(events.InitiatingProcessFolderPath),InitiatingProcessId = tostring(events.InitiatingProcessId),InitiatingProcessIntegrityLevel = tostring(events.InitiatingProcessIntegrityLevel),InitiatingProcessMD5 = tostring(events.InitiatingProcessMD5),InitiatingProcessParentFileName = tostring(events.InitiatingProcessParentFileName),InitiatingProcessParentId = tostring(events.InitiatingProcessParentId),InitiatingProcessSHA1 = tostring(events.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.InitiatingProcessSHA256),InitiatingProcessTokenElevation = tostring(events.InitiatingProcessTokenElevation),IsLocalAdmin = tobool(events.IsLocalAdmin),LogonId = tostring(events.LogonId),LogonType = tostring(events.LogonType),MachineGroup = tostring(events.MachineGroup),Protocol = tostring(events.Protocol),RemoteDeviceName = tostring(events.RemoteDeviceName),RemoteIP = tostring(events.RemoteIP),RemoteIPType = tostring(events.RemoteIPType),RemotePort = toint(events.RemotePort),ReportId = tostring(events.ReportId),Timestamp = todatetime(events.Timestamp),TimeGenerated = todatetime(events.TimeGenerated),InitiatingProcessParentCreationTime = todatetime(events.InitiatingProcessParentCreationTime),InitiatingProcessCreationTime = todatetime(events.InitiatingProcessCreationTime),InitiatingProcessFileSize = tostring(events.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoFileDescription = tostring(events.InitiatingProcessVersionInfoFileDescription),InitiatingProcessVersionInfoInternalFileName = tostring(events.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoProductName = tostring(events.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.InitiatingProcessVersionInfoProductVersion),InitiatingProcessSessionId = tostring(events.InitiatingProcessSessionId),IsInitiatingProcessRemoteSession = tobool(events.IsInitiatingProcessRemoteSession),InitiatingProcessRemoteSessionDeviceName = tostring(events.InitiatingProcessRemoteSessionDeviceName),InitiatingProcessRemoteSessionIP = tostring(events.InitiatingProcessRemoteSessionIP),SourceSystem = tostring(events.SourceSystem),Type = tostring(events.Type)
}

.alter table DeviceLogonEvents policy update @'[{"Source": "DeviceLogonEventsRaw", "Query": "DeviceLogonEventsExpand()", "IsEnabled": true, "IsTransactional": true}]'
