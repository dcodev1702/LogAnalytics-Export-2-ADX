.create table DeviceProcessEventsRaw (Records:dynamic)

.create table DeviceProcessEventsRaw ingestion json mapping 'DeviceProcessEventsRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

.alter-merge table DeviceProcessEventsRaw policy retention softdelete = 0d

.create table DeviceProcessEvents (TenantId:string,AccountDomain:string,AccountName:string,AccountObjectId:string,AccountSid:string,AccountUpn:string,ActionType:string,AdditionalFields:dynamic,AppGuardContainerId:string,DeviceId:string,DeviceName:string,FileName:string,FolderPath:string,FileSize:string,InitiatingProcessAccountDomain:string,InitiatingProcessAccountName:string,InitiatingProcessAccountObjectId:string,InitiatingProcessAccountSid:string,InitiatingProcessAccountUpn:string,InitiatingProcessCommandLine:string,InitiatingProcessFileName:string,InitiatingProcessFolderPath:string,InitiatingProcessId:string,InitiatingProcessIntegrityLevel:string,InitiatingProcessLogonId:string,InitiatingProcessMD5:string,InitiatingProcessParentFileName:string,InitiatingProcessParentId:string,InitiatingProcessSHA1:string,InitiatingProcessSHA256:string,InitiatingProcessTokenElevation:string,InitiatingProcessFileSize:string,InitiatingProcessVersionInfoCompanyName:string,InitiatingProcessVersionInfoProductName:string,InitiatingProcessVersionInfoProductVersion:string,InitiatingProcessVersionInfoInternalFileName:string,InitiatingProcessVersionInfoOriginalFileName:string,InitiatingProcessVersionInfoFileDescription:string,LogonId:string,MD5:string,MachineGroup:string,ProcessCommandLine:string,ProcessCreationTime:datetime,ProcessId:string,ProcessIntegrityLevel:string,ProcessTokenElevation:string,ProcessVersionInfoCompanyName:string,ProcessVersionInfoProductName:string,ProcessVersionInfoProductVersion:string,ProcessVersionInfoInternalFileName:string,ProcessVersionInfoOriginalFileName:string,ProcessVersionInfoFileDescription:string,InitiatingProcessSignerType:string,InitiatingProcessSignatureStatus:string,ReportId:string,SHA1:string,SHA256:string,TimeGenerated:datetime,Timestamp:datetime,InitiatingProcessParentCreationTime:datetime,InitiatingProcessCreationTime:datetime,CreatedProcessSessionId:string,IsProcessRemoteSession:bool,ProcessRemoteSessionDeviceName:string,ProcessRemoteSessionIP:string,InitiatingProcessSessionId:string,IsInitiatingProcessRemoteSession:bool,InitiatingProcessRemoteSessionDeviceName:string,InitiatingProcessRemoteSessionIP:string,SourceSystem:string,Type:string)

.create-or-alter function DeviceProcessEventsExpand() {
    DeviceProcessEventsRaw
| mv-expand events = Records | where events.Type == 'DeviceProcessEvents' and isnotempty(events.TimeGenerated)
| project TenantId = tostring(events.TenantId),AccountDomain = tostring(events.AccountDomain),AccountName = tostring(events.AccountName),AccountObjectId = tostring(events.AccountObjectId),AccountSid = tostring(events.AccountSid),AccountUpn = tostring(events.AccountUpn),ActionType = tostring(events.ActionType),AdditionalFields = todynamic(events.AdditionalFields),AppGuardContainerId = tostring(events.AppGuardContainerId),DeviceId = tostring(events.DeviceId),DeviceName = tostring(events.DeviceName),FileName = tostring(events.FileName),FolderPath = tostring(events.FolderPath),FileSize = tostring(events.FileSize),InitiatingProcessAccountDomain = tostring(events.InitiatingProcessAccountDomain),InitiatingProcessAccountName = tostring(events.InitiatingProcessAccountName),InitiatingProcessAccountObjectId = tostring(events.InitiatingProcessAccountObjectId),InitiatingProcessAccountSid = tostring(events.InitiatingProcessAccountSid),InitiatingProcessAccountUpn = tostring(events.InitiatingProcessAccountUpn),InitiatingProcessCommandLine = tostring(events.InitiatingProcessCommandLine),InitiatingProcessFileName = tostring(events.InitiatingProcessFileName),InitiatingProcessFolderPath = tostring(events.InitiatingProcessFolderPath),InitiatingProcessId = tostring(events.InitiatingProcessId),InitiatingProcessIntegrityLevel = tostring(events.InitiatingProcessIntegrityLevel),InitiatingProcessLogonId = tostring(events.InitiatingProcessLogonId),InitiatingProcessMD5 = tostring(events.InitiatingProcessMD5),InitiatingProcessParentFileName = tostring(events.InitiatingProcessParentFileName),InitiatingProcessParentId = tostring(events.InitiatingProcessParentId),InitiatingProcessSHA1 = tostring(events.InitiatingProcessSHA1),InitiatingProcessSHA256 = tostring(events.InitiatingProcessSHA256),InitiatingProcessTokenElevation = tostring(events.InitiatingProcessTokenElevation),InitiatingProcessFileSize = tostring(events.InitiatingProcessFileSize),InitiatingProcessVersionInfoCompanyName = tostring(events.InitiatingProcessVersionInfoCompanyName),InitiatingProcessVersionInfoProductName = tostring(events.InitiatingProcessVersionInfoProductName),InitiatingProcessVersionInfoProductVersion = tostring(events.InitiatingProcessVersionInfoProductVersion),InitiatingProcessVersionInfoInternalFileName = tostring(events.InitiatingProcessVersionInfoInternalFileName),InitiatingProcessVersionInfoOriginalFileName = tostring(events.InitiatingProcessVersionInfoOriginalFileName),InitiatingProcessVersionInfoFileDescription = tostring(events.InitiatingProcessVersionInfoFileDescription),LogonId = tostring(events.LogonId),MD5 = tostring(events.MD5),MachineGroup = tostring(events.MachineGroup),ProcessCommandLine = tostring(events.ProcessCommandLine),ProcessCreationTime = todatetime(events.ProcessCreationTime),ProcessId = tostring(events.ProcessId),ProcessIntegrityLevel = tostring(events.ProcessIntegrityLevel),ProcessTokenElevation = tostring(events.ProcessTokenElevation),ProcessVersionInfoCompanyName = tostring(events.ProcessVersionInfoCompanyName),ProcessVersionInfoProductName = tostring(events.ProcessVersionInfoProductName),ProcessVersionInfoProductVersion = tostring(events.ProcessVersionInfoProductVersion),ProcessVersionInfoInternalFileName = tostring(events.ProcessVersionInfoInternalFileName),ProcessVersionInfoOriginalFileName = tostring(events.ProcessVersionInfoOriginalFileName),ProcessVersionInfoFileDescription = tostring(events.ProcessVersionInfoFileDescription),InitiatingProcessSignerType = tostring(events.InitiatingProcessSignerType),InitiatingProcessSignatureStatus = tostring(events.InitiatingProcessSignatureStatus),ReportId = tostring(events.ReportId),SHA1 = tostring(events.SHA1),SHA256 = tostring(events.SHA256),TimeGenerated = todatetime(events.TimeGenerated),Timestamp = todatetime(events.Timestamp),InitiatingProcessParentCreationTime = todatetime(events.InitiatingProcessParentCreationTime),InitiatingProcessCreationTime = todatetime(events.InitiatingProcessCreationTime),CreatedProcessSessionId = tostring(events.CreatedProcessSessionId),IsProcessRemoteSession = tobool(events.IsProcessRemoteSession),ProcessRemoteSessionDeviceName = tostring(events.ProcessRemoteSessionDeviceName),ProcessRemoteSessionIP = tostring(events.ProcessRemoteSessionIP),InitiatingProcessSessionId = tostring(events.InitiatingProcessSessionId),IsInitiatingProcessRemoteSession = tobool(events.IsInitiatingProcessRemoteSession),InitiatingProcessRemoteSessionDeviceName = tostring(events.InitiatingProcessRemoteSessionDeviceName),InitiatingProcessRemoteSessionIP = tostring(events.InitiatingProcessRemoteSessionIP),SourceSystem = tostring(events.SourceSystem),Type = tostring(events.Type)
}

.alter table DeviceProcessEvents policy update @'[{"Source": "DeviceProcessEventsRaw", "Query": "DeviceProcessEventsExpand()", "IsEnabled": true, "IsTransactional": true}]'
